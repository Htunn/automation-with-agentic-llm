version: '3.8'

services:
  ansible_llm_api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ansible_llm_api
    restart: unless-stopped
    ports:
      - "127.0.0.1:8000:8000"  # Only expose locally for security
    volumes:
      - ./models:/app/models:ro  # Read-only for models
      - ./logs:/app/logs
      - ./config:/app/config:ro  # Read-only for configs
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - TZ=UTC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Optional Ansible Controller container 
  # Uncomment if you want a dedicated Ansible container
  # ansible_controller:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.ansible
  #   container_name: ansible_controller
  #   restart: unless-stopped
  #   depends_on:
  #     - ansible_llm_api
  #   volumes:
  #     - ./config:/app/config
  #     - ./examples:/app/examples
  #     - ~/.ssh:/home/appuser/.ssh:ro  # SSH keys for connecting to hosts
  #   environment:
  #     - ANSIBLE_LLM_API=http://ansible_llm_api:8000
  #   command: tail -f /dev/null  # Keep the container running
